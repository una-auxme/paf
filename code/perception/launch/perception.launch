<launch>
  <arg name="role_name" default="hero" />
  <arg name="control_loop_rate" default="0.05" />
  <arg name="view_camera" default="False" />
  <arg name="camera_resolution" default="1280" />



  <!-- just for Debugging/ Optimizing purposes -> Uncomment to use and see plots -->
  <!-- <node pkg="perception" type="position_heading_filter_debug_node.py" name="position_heading_filter_debug_node" output="screen">
    <param name="control_loop_rate" value="$(arg control_loop_rate)" />
    <param name="role_name" value="$(arg role_name)" />
  </node> -->
  <!--<node pkg="rqt_plot" type="rqt_plot" output="screen" name="rqt_plot" args="/paf/hero/position_debug/data[10] /paf/hero/position_debug/data[13] /paf/hero/position_debug/data[16]"/>-->
  <!--<node pkg="rqt_plot" type="rqt_plot" output="screen" name="rqt_plot" args="/paf/hero/heading_debug/data[5] /paf/hero/heading_debug/data[6]" />-->

  <node pkg="perception" type="kalman_filter.py" name="kalman_filter_node" output="screen">
    <param name="control_loop_rate" value="$(arg control_loop_rate)" />
    <param name="role_name" value="$(arg role_name)" />
  </node>

  <node pkg="perception" type="position_heading_publisher_node.py" name="position_heading_publisher_node" output="screen">
    <param name="control_loop_rate" value="$(arg control_loop_rate)" />
    <param name="role_name" value="$(arg role_name)" />
    <param name="pos_filter" value="Kalman" />
    <param name="heading_filter" value="Kalman" />
    <!--
        Position Filter values:
        - "Kalman" (Default)
        - "RunningAvg"
        - "None"
        Heading Filter values:
        - "Kalman" (Default)
        - "None"
        - "Old" (Buggy for demonstration purposes only)
      -->
  </node>

  <node pkg="perception" type="vision_node.py" name="VisionNode" output="screen">
    <param name="role_name" value="$(arg role_name)" />
    <param name="view_camera" value="$(arg view_camera)" />
    <param name="camera_resolution" value="$(arg camera_resolution)"/>
    <rosparam file="$(find perception)/config/trafficlight_config.yaml" command="load" />

    <!--
        Image-Segmentation:
      - yolov8x-seg
      - yolo11n-seg
      - yolo11s-seg
      - yolo11m-seg
      - yolo11l-seg
      -->

    <param name="model" value="yolo11m-seg" />
  </node>

  <node pkg="perception" type="traffic_light_node.py" name="TrafficLightNode" output="screen">
    <param name="role_name" value="$(arg role_name)" />
    <param name="side" value="Center" />
    <param name="model" value="/workspace/code/perception/src/traffic_light_detection/models/model_acc_92.48_val_91.88.pt" />
    <param name="tfs_debug" value="False"/>
  </node>

  <node pkg="perception" type="global_plan_distance_publisher.py" name="GlobalPlanDistance" output="screen">
    <param name="control_loop_rate" value="$(arg control_loop_rate)" />
    <param name="role_name" value="$(arg role_name)" />
  </node>

  <node pkg="perception" type="lidar_distance.py" name="lidar_distance" output="screen">
    <param name="point_cloud_topic" value="/carla/hero/LIDAR_filtered"/>
    <param name="range_topic" value="/carla/hero/LIDAR_range"/>

    <!-- Cluster configuration -->
    <param name="clustering_lidar_z_min" value="-1.4" />
    <param name="dbscan_eps" value="0.4" />
    <param name="dbscan_min_samples" value="10" />
  </node>

  <node pkg="perception" type="Lanedetection_node.py" name="Lanedetection" output="screen">
    <param name="role_name" value="$(arg role_name)" />
  </node>

  <node pkg="perception" type="radar_node.py" name="radar_node" output="screen">
    <param name="point_cloud_topic_0" value="/carla/hero/RADAR0"/>
    <param name="point_cloud_topic_1" value="/carla/hero/RADAR1"/>
    <param name="visualization_topic" value="/paf/hero/Radar/radar_break_filtered"/>
    <param name="dbscan_eps" value="0.3"/>
    <param name="dbscan_samples" value="1"/>
    <param name="clustered_points_radar_topic" value="/paf/hero/Radar/clustered_points"/>
    <param name="data_buffered" value="False"/>
    <param name="data_buffer_time" value="0.1"/>
    <param name="imu_debug" value="False"/>
    <param name="accelerometer_arrow_size" value="2"/>
    <param name="accelerometer_factor" value="0.05"/>
    <param name="enable_clustering" value="True"/>
  </node>


  <node pkg="perception" type="lane_position.py" name="lane_position" output="screen">
    <param name="epsilon_clustering" value="1.8"/>
    <!--parameter to play with, if you want to fine-tune the performance-->
    <param name="min_samples_clustering" value="4"/>
    <!--parameter to play with, if you want to fine-tune the performance-->
    <param name="confidence_threshold" value="0.6"/>
    <!--parameter to play with, if you want to fine-tune the performance-->
    <param name="angle_weight" value="0.3"/>
    <!--confidence calculation-->
    <param name="size_weight" value="0.3"/>
    <!--confidence calculation-->
    <param name="std_dev_weight" value="0.4"/>
    <!--confidence calculation-->
    <param name="angle_normalization" value="25"/>
    <!--confidence calculation-->
    <param name="size_normalization" value="15"/>
    <!--confidence calculation-->
    <param name="std_dev_normalization" value="0.1"/>
    <!--confidence calculation-->
    <param name="angle_prediction_threshold" value="5"/>
    <!--predictions currently disabled-->
    <param name="y_tolerance" value="1.0"/>
    <!--prevents multiple entities at same position (room for improvment)-->
    <param name="line_length" value="15"/>
    <!--minimum lanemarking size-->
    <param name="line_width" value="0.5"/>
    <!--lanemarking width-->
  </node>

</launch>
